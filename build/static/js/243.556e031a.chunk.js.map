{"version":3,"file":"static/js/243.556e031a.chunk.js","mappings":"qMAUe,SAASA,EAAW,GAA4C,IAA3CC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAE7C,OACI,gCACKA,IACG,SAAC,IAAc,CAACC,WAAW,aAE/B,SAAC,IAAG,CAACC,GAAI,CACLC,QAASJ,EAAQ,OAAS,qBAC1BK,aAAc,MACdC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,GAAI,EACJC,SAAU,WACVC,MAAOZ,GAAQ,OACfa,OAAQb,GAAQ,OAChBc,GAAI,QACN,UACE,SAAC,IAAG,CAACV,GAAI,CAACO,SAAU,WAAYI,IAAK,MAAOC,KAAM,MAAOC,UAAW,wBAAyBL,MAAO,OAAQC,OAAQ,QAAQ,UACxH,SAAC,IAAgB,CAACb,KAAMA,GAAQ,eAMpD,C,6MCtBMkB,EAAqBC,EAAAA,MAAW,kBAAM,6DAAmC,IAEhE,SAASC,IAEpB,OAAuBC,EAAAA,EAAAA,MAEjBC,GAFkC,YAArB,GAEQC,IAAI,UAAY,GAC3C,GAAyBC,EAAAA,EAAAA,IAAYF,EAAO,KAArCG,GAAyC,YAA3B,GAErB,ECpBW,SAAkD,GAA2B,IAA1BC,EAAK,EAALA,MAE9D,EAAmDC,EAAAA,EAAAA,0BAA0C,eAAtFC,EAAO,gBAAGC,KAAAA,OAAI,MAAG,GAAE,EAAEC,EAAS,EAATA,UAAWC,EAAO,EAAPA,QAEvC,GAAoCC,EAAAA,EAAAA,GAA8B,CAC9DF,UAAAA,EACAD,KAAAA,EACAE,QAAAA,EACAE,gBAAiB,YAAa,IAAXC,EAAI,EAAJA,KACf,KAAIR,EAAMS,OAAS,GAAnB,CAEA,IAAMC,EAAYC,EAAcC,KAAI,SAACC,GAAE,OAAKA,EAAGC,GAAG,IAClDZ,EAAQ,CAACM,KAAAA,EAAME,UAAAA,EAAWV,MAAAA,GAHE,CAIhC,IATGW,EAAa,EAAbA,cAAeI,EAAK,EAALA,MAAOC,EAAG,EAAHA,IAY7B,MAAO,CAACb,KAAMQ,EAAeP,UAAAA,EAAWa,MAAOZ,EAASW,IAAAA,EAAKD,MAAAA,EACjE,CDGqDG,CAAyC,CAAClB,MAAOD,IAArFoB,EAAS,EAAfhB,KAAiBC,EAAS,EAATA,UAAWY,EAAG,EAAHA,IAEnC,GAF6C,EAALD,OAEVK,EAAAA,EAAAA,GAAgB,CAACD,UAAAA,KAAW,eAAnDE,EAAK,KAAEC,EAAY,KAEpBC,GAAIC,EAAAA,EAAAA,GAAoB,CAACC,iBAAkB,iBAEnCC,GAAUC,EAAAA,EAAAA,GAAMC,EAAAA,GAAvBP,MAEP,OAAIjB,GAEI,SAAC/B,EAAA,EAAU,KAId+B,GAA8B,IAAjBiB,EAAMZ,QAAgBV,EAAeU,OAAS,GAExD,SAACoB,EAAA,EAAU,CAACC,QAAQ,KAAKpD,GAAIgD,EAAO1B,MAAO+B,UAAU,SAAQ,SAAER,EAAE,cAIpD,IAAjBF,EAAMZ,QAAgBV,EAAeU,OAAS,GAE1C,SAACoB,EAAA,EAAU,CAACC,QAAQ,KAAKpD,GAAIgD,EAAO1B,MAAO+B,UAAU,SAAQ,SAAER,EAAE,iBAKrE,iCACI,SAAC/B,EAAkB,CAAC6B,MAAOA,EAAOC,aAAcA,KAChD,gBAAKN,IAAKA,MAGtB,C,qCE6DA,IAjHqB,SAACgB,GAGlB,MAAO,CACHC,UAAW,CACPpD,QAAS,OACTE,eAAgB,SAChBD,WAAY,SACZoD,cAAe,SACfC,UAAW,QACXC,UAAW,QAEfC,OAAM,QACFrD,GAAI,GACJsD,GAAI,EACJpD,MAAO8C,EAAMO,YAAYC,OAAOC,QAC/BT,EAAMO,YAAYG,KAAK,UAAY,CAChCxD,MAAO,OACPE,GAAI,GACJ,MAAO,CACH2C,UAAW,SACXY,GAAI,KAIhBC,QAAS,CACL5D,GAAI,EACJ6D,MAAO,kBAEXC,cAAa,QACTC,QAAS,EACTlE,QAAS,OACTE,eAAgB,SAChBD,WAAY,SACZkE,SAAU,OACV,QAAS,CACLC,WAAY,IAEfjB,EAAMO,YAAYG,KAAK,UAAY,CAChCR,cAAe,SACf,QAAS,CACLgB,UAAW,EACXD,WAAY,KAIxBE,cAAe,CACXnE,GAAI,EACJ+D,QAAS,EACT7D,MAAO,OACPiD,UAAW,QAEfiB,MAAO,CACHC,UAAW,CACPxE,QAAS,OACTK,MAAO,QAEXoE,MAAK,QACDzE,QAAS,OACTqD,cAAe,SACfhD,MAAO,MACPP,QAAS,mBACT4E,OAAQ,EACR3E,aAAc,EACd4E,OAAQ,UACRT,QAAS,EACT,UAAW,CACPpE,QAAS,eACTkE,MAAO,YAEVb,EAAMO,YAAYG,KAAK,UAAY,CAChCxD,MAAO,MACP6D,QAAS,IAGjBU,QAAO,QACHvE,MAAO,IACPC,OAAQ,IACRC,GAAI,QACH4C,EAAMO,YAAYG,KAAK,UAAY,CAChCxD,MAAO,MACPC,OAAQ,SAGhBa,OAAM,UACDgC,EAAMO,YAAYG,KAAK,UAAY,CAChCM,SAAU,UAItB3B,MAAO,CACHqC,KAAM,CACFxE,MAAO,MACPE,GAAI,OACJkD,GAAI,EACJtD,GAAI,GAERgB,OAAM,UACDgC,EAAMO,YAAYG,KAAK,UAAY,CAChCM,SAAU,UAItBW,YAAa,CACT3D,OAAM,UACDgC,EAAMO,YAAYG,KAAK,UAAY,CAChCM,SAAU,UAK9B,C,mGCvGe,SAAS1C,EAA8B,GAMyC,IALrCF,EAAS,EAATA,UACAD,EAAI,EAAJA,KACAE,EAAO,EAAPA,QACAE,EAAe,EAAfA,gBAAgB,EAAD,EACfqD,oBAAAA,OAAmB,MAAG,GAAE,EAE9E,GAA0BC,EAAAA,EAAAA,WAAS,GAAM,eAAlC9C,EAAK,KAAE+C,EAAQ,KACtB,GAA0CD,EAAAA,EAAAA,UAAS1D,GAAK,eAAjD4D,EAAa,KAAEC,EAAgB,KACtC,GAAwBH,EAAAA,EAAAA,UAAS,GAAE,eAA5BrD,EAAI,KAAEyD,EAAO,KAEpB,GAAsBC,EAAAA,EAAAA,IAAU,CAC5BC,UAAW,EACXC,WAAY5D,EAAO,EAAI,QAAU,UAF9BQ,EAAG,EAAHA,IAAKqD,EAAM,EAANA,OAiDZ,OA5CAC,EAAAA,EAAAA,YAAU,WACNC,QAAQC,IAAI,WACZP,EAAQ,GACRD,EAAiB,IACjBF,GAAS,GACTvD,EAAgB,CAACC,KAAM,GAC3B,IAAE,OAAKoD,KAEPU,EAAAA,EAAAA,YAAU,WACFjE,GACAF,EAAKM,OAAS,GAAKL,IACnBD,EAAKM,OAAS,GAAKsD,EAActD,OAAS,EAC1CqD,GAAS,IAGT3D,EAAKM,OAAS,IACdqD,GAAS,GAGbE,GAAiB,SAAAS,GACb,OAAIA,EAAKhE,OAAS,EAAUN,GAEqE,IAAlEA,EAAKuE,WAAU,SAAC7D,GAAE,OAAKA,EAAGC,MAAQ2D,EAAKA,EAAKhE,OAAS,GAAGK,GAAG,IAGhF,GAAN,eAAW2D,IAAI,OAAKtE,IAGjBsE,CACX,KACJ,GAAG,CAACtE,EAAMC,EAAWiE,KAErBC,EAAAA,EAAAA,YAAU,WACFjE,GACCgE,IAAUjE,IACXW,GAEJkD,GAAQ,SAAAQ,GAAI,OAAIA,EAAO,CAAC,IAC5B,GAAG,CAACJ,KAEJC,EAAAA,EAAAA,YAAU,WACN/D,EAAgB,CAACC,KAAAA,GACrB,GAAG,CAACA,IAEG,CAACG,cAAeoD,EAAehD,MAAAA,EAAOC,IAAAA,EAAKqD,OAAAA,EAAQ7D,KAAAA,EAC9D,C","sources":["components/Loaders/MiniLoader.tsx","components/Search/SearchComponents/Posts.tsx","redux/api/hooks/useGetManyPostsByTitleWithInfiniteScroll.ts","components/Search/searchStyles.ts","hooks/useInfiniteScrollForQueryHook.ts"],"sourcesContent":["import {Box, CircularProgress} from \"@mui/material\";\r\nimport React from \"react\";\r\nimport StandardHelmet from \"../StandardHelmet\";\r\n\r\ninterface IMiniLoaderProps {\r\n    size?: string,\r\n    bgOff?: boolean,\r\n    withMeta?: boolean\r\n}\r\n\r\nexport default function MiniLoader({size, bgOff, withMeta}: IMiniLoaderProps) {\r\n\r\n    return (\r\n        <>\r\n            {withMeta && (\r\n                <StandardHelmet keyOfOther='loading'/>\r\n            )}\r\n            <Box sx={{\r\n                bgcolor: bgOff ? 'none' : 'background.default',\r\n                borderRadius: '50%',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                mt: 7,\r\n                position: 'relative',\r\n                width: size || '20vw',\r\n                height: size || '20vh',\r\n                mx: 'auto',\r\n            }}>\r\n                <Box sx={{position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)', width: '100%', height: '100%'}}>\r\n                    <CircularProgress size={size || '20vw'}/>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n\r\n}","import {useSearchParams} from \"react-router-dom\";\r\nimport {useDebounce} from \"use-debounce\";\r\nimport {Box, ImageList, Typography} from \"@mui/material\";\r\nimport MiniLoader from \"../../Loaders/MiniLoader\";\r\nimport usePostsActions from \"../../../hooks/usePostsActions\";\r\nimport React from \"react\";\r\nimport useMediaQueries from \"../../../hooks/useMediaQueries\";\r\nimport useShortTranslation from \"../../../hooks/useShortTranslation\";\r\nimport useSx from \"../../../hooks/useSx\";\r\nimport searchStyles from \"../searchStyles\";\r\nimport extendedPostsApi from \"../../../redux/api/extendedPostsApi\";\r\nimport useGetManyPostsByTitleWithInfiniteScroll\r\n    from \"../../../redux/api/hooks/useGetManyPostsByTitleWithInfiniteScroll\";\r\n\r\nconst MasonryPostsDrawer = React.lazy(() => import( \"../../MasonryPostsDrawer\"));\r\n\r\nexport default function Posts() {\r\n\r\n    const [searchParams] = useSearchParams();\r\n\r\n    const query = searchParams.get('query') || ''\r\n    const [debouncedQuery] = useDebounce(query, 500)\r\n\r\n    const {data: initPosts, isLoading, ref, isEnd} = useGetManyPostsByTitleWithInfiniteScroll({title: debouncedQuery})\r\n\r\n    const [posts, postsActions] = usePostsActions({initPosts})\r\n\r\n    const t = useShortTranslation({componentNameKey: 'Search.Posts'})\r\n\r\n    const {posts: styles} = useSx(searchStyles)\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <MiniLoader/>\r\n        )\r\n    }\r\n\r\n    if (!isLoading && posts.length === 0 && debouncedQuery.length > 2) {\r\n        return (\r\n            <Typography variant='h3' sx={styles.title} textAlign='center'>{t('notFound')}</Typography>\r\n        )\r\n    }\r\n\r\n    if (posts.length === 0 && debouncedQuery.length < 2) {\r\n        return (\r\n            <Typography variant='h3' sx={styles.title} textAlign='center'>{t('enterTitle')}</Typography>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <MasonryPostsDrawer posts={posts} postsActions={postsActions}/>\r\n            <div ref={ref} />\r\n        </>\r\n    )\r\n}","import extendedPostsApi from \"../extendedPostsApi\";\r\nimport useInfiniteScrollForQueryHook from \"../../../hooks/useInfiniteScrollForQueryHook\";\r\n\r\nexport default function useGetManyPostsByTitleWithInfiniteScroll({title}: {title: string}) {\r\n\r\n    const [trigger, {data = [], isLoading, isError}] = extendedPostsApi.useLazySearchPostsQuery()\r\n\r\n    const {paginatedData, isEnd, ref} = useInfiniteScrollForQueryHook({\r\n        isLoading,\r\n        data,\r\n        isError,\r\n        triggerCallback: ({page}) => {\r\n            if (title.length < 2) return\r\n\r\n            const arrayOfId = paginatedData.map((el) => el._id)\r\n            trigger({page, arrayOfId, title})\r\n        }\r\n    })\r\n\r\n    return {data: paginatedData, isLoading, error: isError, ref, isEnd}\r\n}","import {Theme} from \"@mui/material\";\r\n\r\n\r\nconst searchStyles = (theme: Theme) => {\r\n\r\n\r\n    return {\r\n        container: {\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            flexDirection: 'column',\r\n            minHeight: '100vh',\r\n            overflowX: 'none'\r\n        },\r\n        input: {\r\n            mt: 10,\r\n            mb: 2,\r\n            width: theme.breakpoints.values.mobile,\r\n            [theme.breakpoints.down('mobile')]: {\r\n                width: '100%',\r\n                mx: 0.5,\r\n                '& *': {\r\n                    textAlign: 'center',\r\n                    ml: 0\r\n                }\r\n            }\r\n        },\r\n        caption: {\r\n            mt: 1,\r\n            color: 'text.secondary'\r\n        },\r\n        linksWrapper: {\r\n            padding: 3,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            fontSize: '24px',\r\n            '& > a': {\r\n                marginLeft: 3\r\n            },\r\n            [theme.breakpoints.down('tablet')]: {\r\n                flexDirection: 'column',\r\n                '& > a': {\r\n                    marginTop: 1,\r\n                    marginLeft: 0,\r\n                }\r\n            }\r\n        } as const,\r\n        outletWrapper: {\r\n            mt: 2,\r\n            padding: 1,\r\n            width: '100%',\r\n            minHeight: '60vh'\r\n        },\r\n        users: {\r\n            usersList: {\r\n                display: 'flex',\r\n                width: '100%'\r\n            },\r\n            item: {\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                width: '20%',\r\n                bgcolor: 'background.paper',\r\n                margin: 1,\r\n                borderRadius: 4,\r\n                cursor: 'pointer',\r\n                padding: 2,\r\n                '&:hover': {\r\n                    bgcolor: 'primary.main',\r\n                    color: '#121212'\r\n                },\r\n                [theme.breakpoints.down('tablet')]: {\r\n                    width: '50%',\r\n                    padding: 1\r\n                }\r\n            },\r\n            avatar: {\r\n                width: 100,\r\n                height: 100,\r\n                mx: 'auto',\r\n                [theme.breakpoints.down('tablet')]: {\r\n                    width: '95%',\r\n                    height: 'auto',\r\n                }\r\n            },\r\n            title: {\r\n                [theme.breakpoints.down('tablet')]: {\r\n                    fontSize: '25px'\r\n                }\r\n            }\r\n        },\r\n        posts: {\r\n            list: {\r\n                width: '20%',\r\n                mx: 'auto',\r\n                mb: 0,\r\n                mt: 2\r\n            },\r\n            title: {\r\n                [theme.breakpoints.down('tablet')]: {\r\n                    fontSize: '25px'\r\n                }\r\n            }\r\n        },\r\n        collections: {\r\n            title: {\r\n                [theme.breakpoints.down('tablet')]: {\r\n                    fontSize: '25px'\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default searchStyles","import React, {useEffect, useState} from \"react\";\r\nimport {useInView} from \"react-intersection-observer\";\r\n\r\nexport interface IUseInfiniteScrollForQueryHookProps {\r\n    isLoading: boolean,\r\n    data: any[],\r\n    isError: boolean,\r\n    triggerCallback: ({page}: { page: number }) => void,\r\n    refetchDependencies?: any[]\r\n}\r\n\r\nexport default function useInfiniteScrollForQueryHook({\r\n                                                          isLoading,\r\n                                                          data,\r\n                                                          isError,\r\n                                                          triggerCallback,\r\n                                                          refetchDependencies = []\r\n                                                      }: IUseInfiniteScrollForQueryHookProps) {\r\n    const [isEnd, setIsEnd] = useState(false);\r\n    const [combinedValue, setCombinedValue] = useState(data);\r\n    const [page, setPage] = useState(1);\r\n\r\n    const {ref, inView} = useInView({\r\n        threshold: 0,\r\n        rootMargin: page > 1 ? '500px' : '100px'\r\n    });\r\n\r\n    useEffect(() => {\r\n        console.log('refetch')\r\n        setPage(1)\r\n        setCombinedValue([])\r\n        setIsEnd(false)\r\n        triggerCallback({page: 1})\r\n    }, [...refetchDependencies]);\r\n\r\n    useEffect(() => {\r\n        if (isError) return;\r\n        if (data.length < 1 || isLoading) return\r\n        if (data.length < 1 && combinedValue.length > 0) {\r\n            setIsEnd(true)\r\n            return\r\n        }\r\n        if (data.length < 15) {\r\n            setIsEnd(true)\r\n        }\r\n\r\n        setCombinedValue(prev => {\r\n            if (prev.length < 1) return data\r\n\r\n            const isNewDataNotSameToPrev = data.findIndex((el) => el._id === prev[prev.length - 1]._id) === -1\r\n\r\n            if (isNewDataNotSameToPrev) {\r\n                return [...prev, ...data]\r\n            }\r\n\r\n            return prev\r\n        })\r\n    }, [data, isLoading, inView]);\r\n\r\n    useEffect(() => {\r\n        if (isError) return;\r\n        if (!inView || isLoading) return;\r\n        if (isEnd) return;\r\n\r\n        setPage(prev => prev + 1)\r\n    }, [inView]);\r\n\r\n    useEffect(() => {\r\n        triggerCallback({page})\r\n    }, [page]);\r\n\r\n    return {paginatedData: combinedValue, isEnd, ref, inView, page}\r\n}"],"names":["MiniLoader","size","bgOff","withMeta","keyOfOther","sx","bgcolor","borderRadius","display","alignItems","justifyContent","mt","position","width","height","mx","top","left","transform","MasonryPostsDrawer","React","Posts","useSearchParams","query","get","useDebounce","debouncedQuery","title","extendedPostsApi","trigger","data","isLoading","isError","useInfiniteScrollForQueryHook","triggerCallback","page","length","arrayOfId","paginatedData","map","el","_id","isEnd","ref","error","useGetManyPostsByTitleWithInfiniteScroll","initPosts","usePostsActions","posts","postsActions","t","useShortTranslation","componentNameKey","styles","useSx","searchStyles","Typography","variant","textAlign","theme","container","flexDirection","minHeight","overflowX","input","mb","breakpoints","values","mobile","down","ml","caption","color","linksWrapper","padding","fontSize","marginLeft","marginTop","outletWrapper","users","usersList","item","margin","cursor","avatar","list","collections","refetchDependencies","useState","setIsEnd","combinedValue","setCombinedValue","setPage","useInView","threshold","rootMargin","inView","useEffect","console","log","prev","findIndex"],"sourceRoot":""}