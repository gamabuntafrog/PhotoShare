{"version":3,"file":"static/js/342.7b3d2fec.chunk.js","mappings":"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","sources":["components/CreatePost/CreatePostComponents/CollectionsInfo.tsx","hooks/useAnchorEl.ts","library/CustomMenu/StyledCustomMenu.tsx","library/CustomMenu/StyledCustomMenuItem.tsx","../node_modules/@mui/material/esm/ListItemText/ListItemText.js"],"sourcesContent":["import React from \"react\";\r\nimport {ICollection} from \"../../../types/collection\";\r\nimport useAnchorEl from \"../../../hooks/useAnchorEl\";\r\nimport {Box, Button, IconButton, ListItemText, Menu, MenuItem, Typography} from \"@mui/material\";\r\nimport useShortTranslation from \"../../../hooks/useShortTranslation\";\r\nimport useSx from \"../../../hooks/useSx\";\r\nimport createPostStyles from \"../createPostStyles\";\r\nimport StyledCustomMenu from \"../../../library/CustomMenu/StyledCustomMenu\";\r\nimport StyledCustomMenuItem from \"../../../library/CustomMenu/StyledCustomMenuItem\";\r\n\r\n;\r\n\r\n\r\ninterface ISavesInfoProps {\r\n    collections: ICollection[],\r\n    openModal: () => void,\r\n    collectionIdError: boolean,\r\n    willSavedInCollectionTitle: string,\r\n    selectCollection: (collectionId: string) => void\r\n}\r\n\r\nexport default function CollectionsInfo(\r\n    {\r\n        collections,\r\n        openModal,\r\n        collectionIdError,\r\n        willSavedInCollectionTitle,\r\n        selectCollection\r\n    }: ISavesInfoProps) {\r\n\r\n    const {anchorEl, isAnchorEl, handleClick, handleClose} = useAnchorEl()\r\n\r\n    const t = useShortTranslation({componentNameKey: 'CreatePost.CollectionsInfo'})\r\n\r\n    const {collectionsInfo: styles} = useSx(createPostStyles)\r\n\r\n    return (\r\n        <>\r\n            <Box sx={styles.buttonWrapper}>\r\n                <Typography color='text.secondary'>{t('saveIn')}</Typography>\r\n                <Button\r\n                    id=\"basic-button\"\r\n                    aria-controls={isAnchorEl ? 'basic-menu' : undefined}\r\n                    aria-haspopup=\"true\"\r\n                    aria-expanded={isAnchorEl ? 'true' : undefined}\r\n                    onClick={handleClick}\r\n                    sx={styles.openMenuButton(collectionIdError)}\r\n                >\r\n                    {willSavedInCollectionTitle}\r\n                </Button>\r\n            </Box>\r\n            <StyledCustomMenu\r\n                id=\"basic-menu\"\r\n                anchorEl={anchorEl}\r\n                open={isAnchorEl}\r\n                onClose={handleClose}\r\n                MenuListProps={{\r\n                    'aria-labelledby': 'basic-button',\r\n                }}\r\n            >\r\n                {collections.map(({title, _id}, i) => {\r\n                    return (\r\n                        <StyledCustomMenuItem\r\n                            key={i}\r\n                            onClick={() => {\r\n                                selectCollection(_id)\r\n                                handleClose()\r\n                            }}\r\n                        >\r\n                            <ListItemText sx={{mr: 1}}>\r\n                                {title}\r\n                            </ListItemText>\r\n                        </StyledCustomMenuItem>\r\n                    )\r\n                })}\r\n                <Box\r\n                    sx={styles.lastItemWrapper}\r\n                >\r\n                    <Button\r\n                        variant='contained'\r\n                        onClick={() => {\r\n                            handleClose()\r\n                            openModal()\r\n                        }}\r\n                    >\r\n                        {t('createNewCollection')}\r\n                    </Button>\r\n                </Box>\r\n            </StyledCustomMenu>\r\n        </>\r\n    )\r\n}","import React, {useState} from \"react\";\r\n\r\n\r\nexport default function useAnchorEl () {\r\n\r\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return {\r\n        anchorEl,\r\n        setAnchorEl,\r\n        isAnchorEl: Boolean(anchorEl),\r\n        handleClick,\r\n        handleClose\r\n    }\r\n}","import {Menu, styled} from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nconst StyledCustomMenu = styled(Menu)(({theme}) => ({\r\n    backgroundColor: 'rgba(0, 0, 0, 0.2)',\r\n    '& .MuiPaper-root': {\r\n        backgroundColor: theme.palette.background.paper,\r\n        maxHeight: '300px',\r\n    },\r\n    '& .MuiMenu-list': {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: 0\r\n    }\r\n}))\r\n\r\nexport default StyledCustomMenu\r\n\r\n// export default function StyledMenuComponent({anchorEl, isAnchorEl, handleClose, children}: {\r\n//     anchorEl: HTMLElement | null,\r\n//     isAnchorEl: boolean,\r\n//     handleClose: () => void,\r\n//     children: React.ReactNode\r\n// }) {\r\n//\r\n//     return (\r\n//         <CustomMenu\r\n//             anchorEl={anchorEl}\r\n//             open={isAnchorEl}\r\n//             onClose={handleClose}\r\n//             MenuListProps={{\r\n//                 'aria-labelledby': 'basic-button',\r\n//             }}\r\n//         >\r\n//             {children}\r\n//         </CustomMenu>\r\n//     )\r\n// }","import {MenuItem, styled} from \"@mui/material\";\r\n\r\nconst StyledCustomMenuItem = styled(MenuItem)(({theme}) => ({\r\n    backgroundColor: theme.palette.background.paper,\r\n    position: 'relative'\r\n}))\r\n\r\nexport default StyledCustomMenuItem","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport listItemTextClasses, { getListItemTextUtilityClass } from './listItemTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    inset,\n    primary,\n    secondary,\n    dense\n  } = ownerState;\n  const slots = {\n    root: ['root', inset && 'inset', dense && 'dense', primary && secondary && 'multiline'],\n    primary: ['primary'],\n    secondary: ['secondary']\n  };\n  return composeClasses(slots, getListItemTextUtilityClass, classes);\n};\nconst ListItemTextRoot = styled('div', {\n  name: 'MuiListItemText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${listItemTextClasses.primary}`]: styles.primary\n    }, {\n      [`& .${listItemTextClasses.secondary}`]: styles.secondary\n    }, styles.root, ownerState.inset && styles.inset, ownerState.primary && ownerState.secondary && styles.multiline, ownerState.dense && styles.dense];\n  }\n})(({\n  ownerState\n}) => _extends({\n  flex: '1 1 auto',\n  minWidth: 0,\n  marginTop: 4,\n  marginBottom: 4\n}, ownerState.primary && ownerState.secondary && {\n  marginTop: 6,\n  marginBottom: 6\n}, ownerState.inset && {\n  paddingLeft: 56\n}));\nconst ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemText'\n  });\n  const {\n      children,\n      className,\n      disableTypography = false,\n      inset = false,\n      primary: primaryProp,\n      primaryTypographyProps,\n      secondary: secondaryProp,\n      secondaryTypographyProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    dense\n  } = React.useContext(ListContext);\n  let primary = primaryProp != null ? primaryProp : children;\n  let secondary = secondaryProp;\n  const ownerState = _extends({}, props, {\n    disableTypography,\n    inset,\n    primary: !!primary,\n    secondary: !!secondary,\n    dense\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: primaryTypographyProps != null && primaryTypographyProps.variant ? undefined : 'span',\n      display: \"block\"\n    }, primaryTypographyProps, {\n      children: primary\n    }));\n  }\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"text.secondary\",\n      display: \"block\"\n    }, secondaryTypographyProps, {\n      children: secondary\n    }));\n  }\n  return /*#__PURE__*/_jsxs(ListItemTextRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [primary, secondary]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * If `true`, the children are indented.\n   * This should be used if there is no left avatar or left icon.\n   * @default false\n   */\n  inset: PropTypes.bool,\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemText;"],"names":["CollectionsInfo","collections","openModal","collectionIdError","willSavedInCollectionTitle","selectCollection","useAnchorEl","anchorEl","isAnchorEl","handleClick","handleClose","t","useShortTranslation","componentNameKey","styles","useSx","createPostStyles","collectionsInfo","sx","buttonWrapper","color","id","undefined","onClick","openMenuButton","open","onClose","MenuListProps","map","i","title","_id","mr","lastItemWrapper","variant","useState","setAnchorEl","Boolean","event","currentTarget","StyledCustomMenu","styled","Menu","theme","backgroundColor","palette","background","paper","maxHeight","padding","StyledCustomMenuItem","MenuItem","position","_excluded","ListItemTextRoot","name","slot","overridesResolver","props","ownerState","listItemTextClasses","primary","secondary","root","inset","multiline","dense","_extends","flex","minWidth","marginTop","marginBottom","paddingLeft","ListItemText","React","inProps","ref","useThemeProps","children","className","disableTypography","primaryProp","primaryTypographyProps","secondaryProp","secondaryTypographyProps","other","_objectWithoutPropertiesLoose","ListContext","classes","slots","composeClasses","getListItemTextUtilityClass","useUtilityClasses","type","Typography","_jsx","component","display","_jsxs","clsx"],"sourceRoot":""}