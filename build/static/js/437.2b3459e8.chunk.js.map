{"version":3,"file":"static/js/437.2b3459e8.chunk.js","mappings":"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","sources":["components/UserProfile/UserProfileComponents/ChangeUserProfile.tsx","components/UserProfile/index.ts","components/UserProfile/UserProfile.tsx","components/UserProfile/userProfileStyles.ts","hooks/useToggleSubscribe.ts","utils/convertImageToString.ts","utils/setPreviewImage.ts","../node_modules/@mui/material/esm/FormGroup/formGroupClasses.js","../node_modules/@mui/material/esm/FormGroup/FormGroup.js"],"sourcesContent":["import {Button, FormGroup, InputLabel, OutlinedInput} from \"@mui/material\";\r\nimport {useAppDispatch, useAppSelector} from \"../../../redux/hooks\";\r\nimport convertImageToString from \"../../../utils/convertImageToString\";\r\nimport {IResponseNotification, pushResponse} from \"../../../redux/slices/responseNotificationsSlice\";\r\nimport {extendedUsersApi} from \"../../../redux/api/rootApi\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {yupResolver} from \"@hookform/resolvers/yup/dist/yup\";\r\nimport {changeProfileValidationSchema} from \"../../../utils/validationSchemas\";\r\nimport {ICurrentUser} from \"../../../types/user\";\r\nimport {Dispatch, SetStateAction, useEffect} from \"react\";\r\nimport setPreviewImage from \"../../../utils/setPreviewImage\";\r\nimport useShortTranslation from \"../../../hooks/useShortTranslation\";\r\nimport useSx from \"../../../hooks/useSx\";\r\nimport userProfileStyles from \"../userProfileStyles\";\r\n\r\ninterface ChangeUserProfile {\r\n    turnOffChangingMode: () => void,\r\n    setAvatarFile: Dispatch<SetStateAction<string | null>>,\r\n    setIsUserUpdating: Dispatch<SetStateAction<boolean>>\r\n}\r\n\r\ninterface IFormData {\r\n    imageList: FileList,\r\n    username: string\r\n}\r\n\r\nexport default function ChangeUserProfile({turnOffChangingMode, setAvatarFile, setIsUserUpdating}: ChangeUserProfile) {\r\n    const currentUser = useAppSelector(state => state.userReducer.user) as ICurrentUser\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        watch,\r\n        formState: {errors}\r\n    } = useForm<IFormData>({\r\n        resolver: yupResolver(changeProfileValidationSchema),\r\n        mode: 'all'\r\n    });\r\n\r\n    const {username: usernameError, imageList: avatarError} = errors\r\n    const isErrors = !!(usernameError || avatarError)\r\n\r\n    const [updateUser] = extendedUsersApi.useUpdateCurrentUserMutation()\r\n\r\n    const saveChanges = async ({username, imageList}: { username: string, imageList: FileList }) => {\r\n        setIsUserUpdating(true)\r\n\r\n        const avatar = imageList.length ? await convertImageToString(imageList) : ''\r\n\r\n        try {\r\n            await updateUser({body: {username, avatar}}).unwrap()\r\n\r\n            document.location.reload()\r\n        } catch (e) {\r\n            setIsUserUpdating(false)\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => setPreviewImage(watch('imageList'), setAvatarFile), [watch('imageList')]);\r\n\r\n\r\n    const onSubmit = handleSubmit(({username, imageList}) => saveChanges({username, imageList}));\r\n\r\n    const t = useShortTranslation({componentNameKey: 'UserProfile.ChangeUserProfile'})\r\n\r\n    const usernameLabel = usernameError?.message ? t(usernameError.message) : t('usernameLabel')\r\n\r\n    const {changeUserProfile: styles} = useSx(userProfileStyles)\r\n\r\n    return (\r\n        <FormGroup\r\n            sx={styles.formWrapper}\r\n        >\r\n            <Button\r\n                type='button'\r\n                sx={{my: 1}}\r\n            >\r\n                <InputLabel sx={styles.inputLabel} htmlFor='avatar'>\r\n                    {t('changeAvatarButtonAsLabel')}\r\n                </InputLabel>\r\n                <input\r\n                    {...register('imageList')}\r\n                    id='avatar'\r\n                    type='file'\r\n                    accept=\"image/*\"\r\n                    hidden\r\n                />\r\n            </Button>\r\n\r\n            <InputLabel\r\n                error={!!usernameError}\r\n                htmlFor='username'>\r\n                {usernameLabel}\r\n            </InputLabel>\r\n            <OutlinedInput\r\n                defaultValue={currentUser.username}\r\n                error={!!usernameError}\r\n                {...register('username')}\r\n                id='username'\r\n                sx={{my: 1}}\r\n            />\r\n            <Button\r\n                type='button'\r\n                color='error'\r\n                sx={{mb: 1}}\r\n                onClick={turnOffChangingMode}\r\n            >\r\n                {t('cancelChangesButton')}\r\n            </Button>\r\n            <Button\r\n                disabled={isErrors}\r\n                type='submit'\r\n                onClick={onSubmit}>\r\n                {t('saveChangesButton')}\r\n            </Button>\r\n        </FormGroup>\r\n    )\r\n}","import UserProfile from './UserProfile'\r\nexport default UserProfile","import {\r\n    Avatar,\r\n    Box,\r\n    Button,\r\n\r\n    Typography, useTheme\r\n} from \"@mui/material\";\r\nimport {NavLink, Outlet, useParams} from \"react-router-dom\";\r\nimport {useAppSelector} from \"../../redux/hooks\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {extendedCollectionsApi, extendedUsersApi} from \"../../redux/api/rootApi\";\r\nimport useToggleSubscribe from \"../../hooks/useToggleSubscribe\";\r\nimport {ICurrentUser} from \"../../types/user\";\r\nimport useSx from \"../../hooks/useSx\";\r\nimport userProfileStyles from \"./userProfileStyles\";\r\nimport ChangeUserProfile from \"./UserProfileComponents/ChangeUserProfile\";\r\nimport FullScreenLoader from \"../Loaders/FullScreenLoader\";\r\nimport {StyledHeaderNavLink} from \"../Header/headerStyles\";\r\nimport useShortTranslation from \"../../hooks/useShortTranslation\";\r\nimport StandardHelmet from \"../StandardHelmet\";\r\n\r\n\r\nexport default function UserProfile() {\r\n    const {id = ''} = useParams<{ id: string }>()!\r\n\r\n    const currentUser = useAppSelector(state => state.userReducer.user) as ICurrentUser\r\n\r\n    const {data: user, isLoading, error} = extendedUsersApi.useGetUserByIdQuery({id})\r\n\r\n    const [isUserUpdating, setIsUserUpdating] = useState(false);\r\n    const [avatarFile, setAvatarFile] = useState<null | string>(null);\r\n    const [isChangingMode, setIsChangingMode] = useState(false);\r\n    const [isAddUserModalOpen, setIsAddUserModalOpen] = useState(false);\r\n\r\n    const {isSubscribed, toggleSubscribe} = useToggleSubscribe(id)\r\n\r\n    const styles = useSx(userProfileStyles)\r\n\r\n    const t = useShortTranslation({componentNameKey: 'UserProfile'})\r\n\r\n\r\n    if (isLoading || isUserUpdating) return <FullScreenLoader withMeta/>\r\n\r\n    if (!user || error || !currentUser) {\r\n        return (\r\n            <>\r\n                <StandardHelmet keyOfOther='error'/>\r\n                <Box sx={styles.loaderOrErrorWrapper}>\r\n                    <Typography variant='h1'>Not Found</Typography>\r\n                </Box>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const {\r\n        avatar,\r\n        username,\r\n        email,\r\n        createdAt,\r\n        _id: userId,\r\n        subscribesCount,\r\n        subscribersCount,\r\n        postsCount,\r\n        canViewAllowedToViewCollections\r\n    } = user\r\n\r\n\r\n    const avatarURL = avatar || ''\r\n    const [month, day, year] = new Date(createdAt).toLocaleDateString('en-US').split('/')\r\n    const formattedCreatedAt = [day, month, year].join('.')\r\n\r\n    const {_id: currentUserId} = currentUser\r\n    const isProfileOfCurrentUser = currentUserId === userId\r\n\r\n    const onToggleSubscribe = () => toggleSubscribe(id, isSubscribed)\r\n\r\n    const turnOnChangingMode = () => setIsChangingMode(true)\r\n    const turnOffChangingMode = () => {\r\n        setAvatarFile(null)\r\n        setIsChangingMode(false)\r\n    }\r\n\r\n    const closeAddAuthorModal = () => setIsAddUserModalOpen(false)\r\n    const openAddAuthorModal = () => setIsAddUserModalOpen(true)\r\n\r\n    return (\r\n        <Box>\r\n            <StandardHelmet keyOfTitle='userProfile' options={{username}}/>\r\n            {/*<AddAuthorModal*/}\r\n            {/*    isAddUserModalOpen={isAddUserModalOpen}*/}\r\n            {/*    closeAddAuthorModal={closeAddAuthorModal}*/}\r\n            {/*    authorId={id}*/}\r\n            {/*/>*/}\r\n            <Box\r\n                sx={styles.wrapper}\r\n            >\r\n                <Avatar sx={styles.avatar} src={avatarFile || avatarURL}/>\r\n                <Box\r\n                    sx={styles.userInfoWrapper}\r\n                >\r\n                    {isChangingMode ?\r\n                        <ChangeUserProfile\r\n                            setIsUserUpdating={setIsUserUpdating}\r\n                            turnOffChangingMode={turnOffChangingMode}\r\n                            setAvatarFile={setAvatarFile}\r\n                        />\r\n                        :\r\n                        <>\r\n                            <Typography variant='h4'>{username}</Typography>\r\n                            <Typography variant='body1'>{email}</Typography>\r\n                            <Box sx={styles.userInfoSecondWrapper}>\r\n                                <Typography sx={styles.infoItem}>{t('postsCount', {postsCount})}</Typography>\r\n                                <Typography sx={styles.infoItem}> {t('subscribesCount', {subscribesCount})}</Typography>\r\n                                <Typography sx={styles.infoItem}>{t('subscribersCount', {subscribersCount})}</Typography>\r\n                            </Box>\r\n                            <Typography>{t('userCreatedAt', {date: formattedCreatedAt})}</Typography>\r\n                        </>\r\n                    }\r\n                    {isProfileOfCurrentUser && !isChangingMode &&\r\n                        <Button onClick={turnOnChangingMode}>\r\n                            {t('changeProfileButton')}\r\n                        </Button>\r\n                    }\r\n                    {!isProfileOfCurrentUser &&\r\n                        <Button\r\n                            variant='outlined'\r\n                            sx={{mt: 1}}\r\n                            onClick={onToggleSubscribe}>\r\n                            {!isSubscribed ? t('subscribeButton') : t('unsubscribeButton')}\r\n                        </Button>\r\n                    }\r\n                    {/*{(!isProfileOfCurrentUser && !isAddUserModalOpen) &&*/}\r\n                    {/*    <Button*/}\r\n                    {/*        variant='outlined'*/}\r\n                    {/*        sx={{mt: 1}}*/}\r\n                    {/*        onClick={openAddAuthorModal}>*/}\r\n                    {/*        Add author to your collection*/}\r\n                    {/*    </Button>*/}\r\n                    {/*}*/}\r\n\r\n                </Box>\r\n            </Box>\r\n            <Box sx={styles.navLinksWrapper}>\r\n                <StyledHeaderNavLink className='first' to={``} end>{t('linkToPosts')}</StyledHeaderNavLink>\r\n                <StyledHeaderNavLink to={`collections`}>{t('linkToCollections')}</StyledHeaderNavLink>\r\n                {canViewAllowedToViewCollections && (\r\n                    <StyledHeaderNavLink to={`allowedToView`}>{t('linkToAllowedToView')}</StyledHeaderNavLink>\r\n                )}\r\n            </Box>\r\n            <Box sx={{minHeight: '100vh'}}>\r\n                <Outlet/>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\n","import {styled, Theme} from \"@mui/material\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst userProfileStyles = (theme: Theme) => {\r\n\r\n\r\n    return {\r\n        loaderOrErrorWrapper: {\r\n            minHeight: '100vh',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n        },\r\n        wrapper: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            my: 3,\r\n            [theme.breakpoints.down('tablet')]: {\r\n                flexDirection: 'column'\r\n            }\r\n        },\r\n        avatar: {width: '200px', height: '200px'},\r\n        userInfoWrapper: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            flexDirection: 'column',\r\n            ml: 2,\r\n            [theme.breakpoints.down('tablet')]: {\r\n                ml: 0,\r\n            }\r\n        },\r\n        userInfoSecondWrapper: {display: 'flex', margin: 1},\r\n        infoItem: {mx: 1, textAlign: 'center'},\r\n        allowedToViewCollectionsWrapper: {mt: 3, mb: 6, pt: 3, borderTop: `8px solid ${theme.palette.primary.main}`},\r\n        navLinksWrapper: {\r\n            padding: 3,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            fontSize: '24px',\r\n            '& > a': {\r\n                marginLeft: 3\r\n            },\r\n            [theme.breakpoints.down('tablet')]: {\r\n                flexDirection: 'column',\r\n                '& > a': {\r\n                    marginTop: 1,\r\n                    marginLeft: 0,\r\n                    textAlign: 'center'\r\n                }\r\n            }\r\n        },\r\n        changeUserProfile: {\r\n            formWrapper: {\r\n                ml: 1,\r\n                [theme.breakpoints.down('tablet')]: {\r\n                    ml: 0,\r\n                    '& *': {\r\n                        textAlign: 'center'\r\n                    }\r\n                }\r\n            },\r\n            inputLabel: {cursor: 'pointer', color: 'inherit', width: '100%'}\r\n        }\r\n    }\r\n}\r\n\r\nexport default userProfileStyles\r\n\r\nexport const StyledCollectionItem = styled(NavLink)(({theme}) => ({\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.primary.main,\r\n    borderRadius: '8px',\r\n    overflow: 'hidden',\r\n    minHeight: '150px',\r\n    maxHeight: '300px',\r\n    [theme.breakpoints.down('tablet')]: {\r\n        height: '150px',\r\n    }\r\n}))","import {useAppDispatch, useAppSelector} from \"../redux/hooks\";\r\nimport {extendedUsersApi} from \"../redux/api/rootApi\";\r\nimport {subscribeToUser, unsubscribeFromUser} from \"../redux/slices/userSlice\";\r\n\r\nconst useToggleSubscribe = (authorId: string) => {\r\n    const subscribes = useAppSelector((state) => state.userReducer.user!.subscribes) as string[]\r\n\r\n    const isSubscribed = subscribes.some((id) => id === authorId)\r\n\r\n    const dispatch = useAppDispatch()\r\n    const [subscribe] = extendedUsersApi.useSubscribeToUserMutation()\r\n    const [unsubscribe] = extendedUsersApi.useUnsubscribeFromUserMutation()\r\n\r\n    const toggleSubscribe = async (authorId: string, isSubscribed: boolean) => {\r\n        try {\r\n            isSubscribed ? unsubscribe({id: authorId}).unwrap() : subscribe({id: authorId}).unwrap()\r\n\r\n            isSubscribed ? dispatch(unsubscribeFromUser(authorId)) : dispatch(subscribeToUser(authorId))\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    return {toggleSubscribe, isSubscribed}\r\n}\r\n\r\nexport default useToggleSubscribe","export default async function convertImageToString (imageList: FileList): Promise<string>  {\r\n    const imagePromise: Promise<string> = new Promise((resolve, reject) => {\r\n        const fileReader = new FileReader()\r\n        fileReader.onload = (e) => {\r\n            const {result} = e.target as FileReader\r\n            if (result) {\r\n                // console.log(result)\r\n                resolve(result as string)\r\n            }\r\n        }\r\n\r\n        fileReader.readAsDataURL(imageList[0]);\r\n    })\r\n    return imagePromise\r\n}\r\n\r\n","import {Dispatch} from \"react\";\r\n\r\nexport default function setPreviewImage(fileList: FileList, hook: Dispatch<string | null>) {\r\n    if (!fileList || fileList && fileList.length < 1) return hook(null)\r\n\r\n    const imageFile = fileList[0]\r\n\r\n    const setPreview = () => {\r\n        const fileReader = new FileReader()\r\n        fileReader.onload = (e) => {\r\n            const {result} = e.target as FileReader\r\n            if (result) {\r\n                hook(result as string)\r\n            }\r\n        }\r\n        fileReader.readAsDataURL(imageFile);\r\n    }\r\n\r\n    setPreview()\r\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getFormGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiFormGroup', slot);\n}\nconst formGroupClasses = generateUtilityClasses('MuiFormGroup', ['root', 'row', 'error']);\nexport default formGroupClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"row\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getFormGroupUtilityClass } from './formGroupClasses';\nimport useFormControl from '../FormControl/useFormControl';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    row,\n    error\n  } = ownerState;\n  const slots = {\n    root: ['root', row && 'row', error && 'error']\n  };\n  return composeClasses(slots, getFormGroupUtilityClass, classes);\n};\nconst FormGroupRoot = styled('div', {\n  name: 'MuiFormGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.row && styles.row];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'column',\n  flexWrap: 'wrap'\n}, ownerState.row && {\n  flexDirection: 'row'\n}));\n\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\nconst FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormGroup'\n  });\n  const {\n      className,\n      row = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = _extends({}, props, {\n    row,\n    error: fcs.error\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormGroupRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Display group of elements in a compact row.\n   * @default false\n   */\n  row: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default FormGroup;"],"names":["ChangeUserProfile","turnOffChangingMode","setAvatarFile","setIsUserUpdating","currentUser","useAppSelector","state","userReducer","user","useForm","resolver","yupResolver","changeProfileValidationSchema","mode","register","handleSubmit","watch","errors","formState","usernameError","username","avatarError","imageList","isErrors","extendedUsersApi","updateUser","saveChanges","length","convertImageToString","avatar","body","unwrap","document","location","reload","useEffect","setPreviewImage","onSubmit","t","useShortTranslation","componentNameKey","usernameLabel","message","styles","useSx","userProfileStyles","changeUserProfile","FormGroup","sx","formWrapper","Button","type","my","InputLabel","inputLabel","htmlFor","id","accept","hidden","error","OutlinedInput","defaultValue","color","mb","onClick","disabled","useParams","data","isLoading","useState","isUserUpdating","avatarFile","isChangingMode","setIsChangingMode","useToggleSubscribe","isSubscribed","toggleSubscribe","FullScreenLoader","withMeta","StandardHelmet","keyOfOther","Box","loaderOrErrorWrapper","Typography","variant","email","createdAt","userId","_id","subscribesCount","subscribersCount","postsCount","canViewAllowedToViewCollections","avatarURL","Date","toLocaleDateString","split","month","formattedCreatedAt","join","isProfileOfCurrentUser","keyOfTitle","options","wrapper","Avatar","src","userInfoWrapper","userInfoSecondWrapper","infoItem","date","mt","navLinksWrapper","className","to","end","minHeight","theme","display","alignItems","justifyContent","breakpoints","down","flexDirection","width","height","ml","margin","mx","textAlign","allowedToViewCollectionsWrapper","pt","borderTop","palette","primary","main","padding","fontSize","marginLeft","marginTop","cursor","StyledCollectionItem","styled","NavLink","position","backgroundColor","borderRadius","overflow","maxHeight","authorId","subscribes","some","dispatch","useAppDispatch","subscribe","unsubscribe","unsubscribeFromUser","subscribeToUser","e","console","log","imagePromise","Promise","resolve","reject","fileReader","FileReader","onload","result","target","readAsDataURL","fileList","hook","imageFile","setPreview","getFormGroupUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","FormGroupRoot","name","overridesResolver","props","ownerState","root","row","_extends","flexWrap","React","inProps","ref","useThemeProps","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","fcs","formControlState","states","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx"],"sourceRoot":""}