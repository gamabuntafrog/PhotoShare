{"version":3,"file":"static/js/570.dc954aef.chunk.js","mappings":"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","sources":["components/MasonryPostsDrawer/index.ts","components/MasonryPostsDrawer/MasonryPostsDrawer.tsx","utils/sortItemsForMasonryList.ts","components/Posts/postsStyles.ts","components/Search/SearchComponents/Posts.tsx","components/Search/searchStyles.ts","hooks/useMediaQueries.ts"],"sourcesContent":["\r\nimport MasonryPostsDrawer from \"./MasonryPostsDrawer\";\r\n\r\nexport default MasonryPostsDrawer","import {IPost} from \"../../types/post\";\r\nimport {IPostsActions} from \"../../hooks/usePostsActions\";\r\nimport useMediaQueries from \"../../hooks/useMediaQueries\";\r\nimport useSx from \"../../hooks/useSx\";\r\nimport postsStyles from \"../Posts/postsStyles\";\r\nimport sortItemsForMasonryList from \"../../utils/sortItemsForMasonryList\";\r\nimport {Box, ImageList} from \"@mui/material\";\r\nimport PostItem from \"../PostItem\";\r\nimport React from \"react\";\r\n\r\n\r\nexport default function MasonryPostsDrawer({posts, postsActions}: {posts: IPost[], postsActions: IPostsActions}) {\r\n    const {isSmallerThanLaptop, isSmallerThanTablet} = useMediaQueries()\r\n    const postsListCols = isSmallerThanLaptop ? isSmallerThanTablet ? 2 : 3 : 5\r\n\r\n    const columns = Array.from({length: postsListCols})\r\n\r\n    const styles = useSx(postsStyles)\r\n\r\n    const sortedPostsForMasonryList = sortItemsForMasonryList(postsListCols, posts)\r\n\r\n    return (\r\n        <Box sx={{display: 'flex'}}>\r\n            {columns.map((_, index) => {\r\n                const postsLengthInOneColumn = Math.round(sortedPostsForMasonryList.length / postsListCols) || 1\r\n\r\n                const slicedPosts = sortedPostsForMasonryList.slice(index * postsLengthInOneColumn, index * postsLengthInOneColumn + postsLengthInOneColumn)\r\n\r\n                return (\r\n                    <ImageList\r\n                        variant=\"masonry\"\r\n                        sx={styles.postsList}\r\n                        gap={12}\r\n                        key={index}\r\n                        cols={1}\r\n                    >\r\n                        {slicedPosts.map((post) => <PostItem\r\n                            postsActions={postsActions}\r\n                            post={post}\r\n                            key={post._id}\r\n                        />)}\r\n                    </ImageList>\r\n                )\r\n            })}\r\n        </Box>\r\n    )\r\n}\r\n\r\n\r\n// 1 ImageList = 1 column\r\n\r\n// for example: if postsListCols = 3\r\n// html: first column second column third column\r\n//             image         image        image\r\n//             image         image        image\r\n//             image         image        image\r\n//             image         image        image\r\n//etc...","export default function sortItemsForMasonryList(columnsLength: number, array: any[]) {\r\n    const result: any[] = []\r\n\r\n    for (let column = 0; column < columnsLength; column++) {\r\n        for (let columnItem = column; columnItem < array.length; columnItem += columnsLength) {\r\n            // console.log(`column ${column} columnItem ${columnItem}`)\r\n            result.push(array[columnItem])\r\n        }\r\n    }\r\n\r\n    // notSorted\r\n    // 0 5 10 15 20\r\n    // 1 6 11 16 21\r\n    // 2 7 12 17 22\r\n    // 3 8 13 18 23\r\n    // 4 9 14 19 24\r\n\r\n    // may sorted to be\r\n    // 0 - 0 5 - 1 10 - 2 15 - 3 20 - 4\r\n\r\n    return result\r\n}\r\n\r\n","import {Theme} from \"@mui/material\";\r\n\r\n\r\nconst postsStyles = (theme: Theme) => {\r\n\r\n\r\n    return {\r\n        container: {\r\n            py: 2,\r\n            px: 1,\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n\r\n            // height: '200vh'\r\n        },\r\n        errorContainer: {\r\n            margin: '0 auto',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            height: '90vh',\r\n            maxHeight: '90vh'\r\n        },\r\n        postsList: {\r\n            width: '20%',\r\n            [theme.breakpoints.down('laptop')]: {\r\n                width: '33.33%'\r\n            },\r\n            [theme.breakpoints.down('tablet')]: {\r\n                width: '50%'\r\n            },\r\n            // mx: 'auto',\r\n            // my: 0,\r\n            margin: 1\r\n            // minHeight: '110vh'\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default postsStyles","import {extendedPostsApi} from \"../../../redux/api/rootApi\";\r\nimport {useSearchParams} from \"react-router-dom\";\r\nimport {useDebounce} from \"use-debounce\";\r\nimport {Box, ImageList, Typography} from \"@mui/material\";\r\nimport MiniLoader from \"../../Loaders/MiniLoader\";\r\nimport usePostsActions from \"../../../hooks/usePostsActions\";\r\nimport PostItem from \"../../PostItem\";\r\nimport React from \"react\";\r\nimport useMediaQueries from \"../../../hooks/useMediaQueries\";\r\nimport useShortTranslation from \"../../../hooks/useShortTranslation\";\r\nimport useSx from \"../../../hooks/useSx\";\r\nimport searchStyles from \"../searchStyles\";\r\nimport MasonryPostsDrawer from \"../../MasonryPostsDrawer\";\r\n\r\n\r\nexport default function Posts() {\r\n\r\n    const [searchParams] = useSearchParams();\r\n\r\n    const query = searchParams.get('query') || ''\r\n    const [debouncedQuery] = useDebounce(query, 500)\r\n\r\n    const {data: initPosts, isLoading} = extendedPostsApi.useSearchPostsQuery({\r\n        title: debouncedQuery\r\n    }, {\r\n        skip: debouncedQuery.length < 2\r\n    })\r\n\r\n    const [posts, postsActions] = usePostsActions({initPosts})\r\n\r\n    const {isSmallerThanLaptop, isSmallerThanTablet} = useMediaQueries()\r\n    const postsListCols = isSmallerThanLaptop ? isSmallerThanTablet ? 2 : 3 : 5\r\n\r\n    const t = useShortTranslation({componentNameKey: 'Search.Posts'})\r\n\r\n    const {posts: styles} = useSx(searchStyles)\r\n\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <>\r\n                <MiniLoader/>\r\n            </>\r\n        )\r\n    }\r\n\r\n    if (!isLoading && posts.length === 0 && debouncedQuery.length > 2) {\r\n        return (\r\n            <>\r\n                <Typography variant='h3' sx={styles.title} textAlign='center'>{t('notFound')}</Typography>\r\n            </>\r\n        )\r\n    }\r\n\r\n    if (posts.length === 0 && debouncedQuery.length < 2) {\r\n        return (\r\n            <>\r\n                <Typography variant='h3' sx={styles.title} textAlign='center'>{t('enterTitle')}</Typography>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <MasonryPostsDrawer posts={posts} postsActions={postsActions}/>\r\n        </>\r\n    )\r\n}","import {Theme} from \"@mui/material\";\r\n\r\n\r\nconst searchStyles = (theme: Theme) => {\r\n\r\n\r\n    return {\r\n        container: {\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            flexDirection: 'column',\r\n            minHeight: '100vh',\r\n            overflowX: 'none'\r\n        },\r\n        input: {\r\n            mt: 10,\r\n            mb: 2,\r\n            width: theme.breakpoints.values.mobile,\r\n            [theme.breakpoints.down('mobile')]: {\r\n                width: '100%',\r\n                mx: 0.5,\r\n                '& *': {\r\n                    textAlign: 'center',\r\n                    ml: 0\r\n                }\r\n            }\r\n        },\r\n        caption: {\r\n            mt: 1,\r\n            color: 'text.secondary'\r\n        },\r\n        linksWrapper: {\r\n            padding: 3,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            fontSize: '24px',\r\n            '& > a': {\r\n                marginLeft: 3\r\n            },\r\n            [theme.breakpoints.down('tablet')]: {\r\n                flexDirection: 'column',\r\n                '& > a': {\r\n                    marginTop: 1,\r\n                    marginLeft: 0,\r\n                }\r\n            }\r\n        } as const,\r\n        outletWrapper: {\r\n            mt: 2,\r\n            padding: 1,\r\n            width: '100%',\r\n            minHeight: '60vh'\r\n        },\r\n        users: {\r\n            usersList: {\r\n                display: 'flex',\r\n                width: '100%'\r\n            },\r\n            item: {\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                width: '20%',\r\n                bgcolor: 'background.paper',\r\n                margin: 1,\r\n                borderRadius: 4,\r\n                cursor: 'pointer',\r\n                padding: 2,\r\n                '&:hover': {\r\n                    bgcolor: 'primary.main',\r\n                    color: '#121212'\r\n                },\r\n                [theme.breakpoints.down('tablet')]: {\r\n                    width: '50%',\r\n                    padding: 1\r\n                }\r\n            },\r\n            avatar: {\r\n                width: 100,\r\n                height: 100,\r\n                mx: 'auto',\r\n                [theme.breakpoints.down('tablet')]: {\r\n                    width: '95%',\r\n                    height: 'auto',\r\n                }\r\n            },\r\n            title: {\r\n                [theme.breakpoints.down('tablet')]: {\r\n                    fontSize: '25px'\r\n                }\r\n            }\r\n        },\r\n        posts: {\r\n            list: {\r\n                width: '20%',\r\n                mx: 'auto',\r\n                mb: 0,\r\n                mt: 2\r\n            },\r\n            title: {\r\n                [theme.breakpoints.down('tablet')]: {\r\n                    fontSize: '25px'\r\n                }\r\n            }\r\n        },\r\n        collections: {\r\n            title: {\r\n                [theme.breakpoints.down('tablet')]: {\r\n                    fontSize: '25px'\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default searchStyles","import useMediaQuery from \"@mui/material/useMediaQuery\";\r\nimport {useTheme} from \"@mui/material\";\r\n\r\n\r\nconst useMediaQueries = () => {\r\n\r\n    const theme = useTheme()\r\n\r\n    const isSmallerThanLaptop = useMediaQuery(theme.breakpoints.down('laptop'));\r\n    const isSmallerThanTablet = useMediaQuery(theme.breakpoints.down('tablet'));\r\n    const isSmallerThanMobile = useMediaQuery(theme.breakpoints.down('mobile'));\r\n\r\n\r\n    return {\r\n        isSmallerThanLaptop,\r\n        isSmallerThanTablet,\r\n        isSmallerThanMobile\r\n    }\r\n}\r\n\r\nexport default useMediaQueries"],"names":["posts","postsActions","useMediaQueries","isSmallerThanLaptop","isSmallerThanTablet","postsListCols","columns","Array","from","length","styles","useSx","postsStyles","sortedPostsForMasonryList","columnsLength","array","result","column","columnItem","push","sortItemsForMasonryList","Box","sx","display","map","_","index","postsLengthInOneColumn","Math","round","slicedPosts","slice","ImageList","variant","postsList","gap","cols","post","PostItem","_id","theme","container","py","px","flexDirection","errorContainer","margin","alignItems","justifyContent","height","maxHeight","width","breakpoints","down","Posts","useSearchParams","query","get","useDebounce","debouncedQuery","extendedPostsApi","title","skip","initPosts","data","isLoading","usePostsActions","t","useShortTranslation","componentNameKey","searchStyles","textAlign","minHeight","overflowX","input","mt","mb","values","mobile","mx","ml","caption","color","linksWrapper","padding","fontSize","marginLeft","marginTop","outletWrapper","users","usersList","item","bgcolor","borderRadius","cursor","avatar","list","collections","useTheme","useMediaQuery","isSmallerThanMobile"],"sourceRoot":""}