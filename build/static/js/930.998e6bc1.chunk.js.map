{"version":3,"file":"static/js/930.998e6bc1.chunk.js","mappings":"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","sources":["components/Register/Register.tsx","components/Register/registerStyles.ts","components/Register/index.ts","../node_modules/@mui/icons-material/esm/Visibility.js","../node_modules/@mui/icons-material/esm/VisibilityOff.js","../node_modules/@mui/material/esm/FormGroup/formGroupClasses.js","../node_modules/@mui/material/esm/FormGroup/FormGroup.js","../node_modules/@mui/material/esm/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/esm/InputAdornment/InputAdornment.js"],"sourcesContent":["import {useForm} from \"react-hook-form\";\r\nimport {useAppDispatch} from \"../../redux/hooks\";\r\nimport {register as registerUser} from \"../../redux/slices/userSlice\";\r\nimport {\r\n    Button,\r\n    Container,\r\n    FormGroup, IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    Typography\r\n} from \"@mui/material\";\r\nimport {yupResolver} from \"@hookform/resolvers/yup\";\r\nimport {registerValidationSchema} from \"../../utils/validationSchemas\";\r\nimport {Visibility, VisibilityOff} from \"@mui/icons-material\";\r\nimport {useState} from \"react\";\r\nimport useSx from \"../../hooks/useSx\";\r\nimport registerStyles from \"./registerStyles\";\r\nimport {StyledHeaderNavLink} from \"../Header/headerStyles\";\r\nimport useShortTranslation from \"../../hooks/useShortTranslation\";\r\nimport StandardHelmet from \"../StandardHelmet\";\r\n\r\ninterface IFormData {\r\n    username: string,\r\n    email: string,\r\n    password: string,\r\n    repeatPassword: string\r\n}\r\n\r\nenum htmlInputId {\r\n    username,\r\n    email,\r\n    password,\r\n    repeatPassword\r\n}\r\n\r\n\r\nexport default function Register() {\r\n    const {register, setValue, handleSubmit, formState: {errors}} = useForm<IFormData>({\r\n        resolver: yupResolver(registerValidationSchema),\r\n        mode: 'all'\r\n    });\r\n\r\n    const {\r\n        username: usernameError,\r\n        email: emailError,\r\n        password: passwordError,\r\n        repeatPassword: repeatPasswordError\r\n    } = errors\r\n    // console.log(errors)\r\n    const dispatch = useAppDispatch()\r\n\r\n\r\n    const onSubmit = handleSubmit(({email, password, username}) => {\r\n        dispatch(registerUser({email, password, username}))\r\n    });\r\n\r\n\r\n    const isNotValidated = !!usernameError || !!emailError || !!passwordError || !!repeatPasswordError\r\n\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n    const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const styles = useSx(registerStyles)\r\n\r\n    const t = useShortTranslation({componentNameKey: 'Register'})\r\n\r\n    const emailLabel = emailError?.message ? t(emailError.message) : t('emailLabel')\r\n    const usernameLabel = usernameError?.message ? t(usernameError.message) : t('usernameLabel')\r\n    const passwordLabel = passwordError?.message ? t(passwordError.message) : t('passwordLabel')\r\n    const repeatPasswordLabel = repeatPasswordError?.message ? t(repeatPasswordError.message) : t('repeatPasswordLabel')\r\n    const submitButtonText = isNotValidated ? t('loginButtonDisabled') : t('loginButton')\r\n\r\n    return (\r\n        <>\r\n            <StandardHelmet keyOfTitle='register'/>\r\n\r\n            <Container\r\n                sx={styles.container}\r\n            >\r\n                <Typography sx={styles.title} variant='h1'>{t('title')}</Typography>\r\n                <FormGroup\r\n                    onSubmit={onSubmit}\r\n                    sx={styles.form}\r\n                >\r\n                    <InputLabel\r\n                        sx={styles.label}\r\n                        error={!!usernameError}\r\n                        htmlFor={`${htmlInputId.username}`}>\r\n                        {usernameLabel}\r\n                    </InputLabel>\r\n                    <OutlinedInput\r\n                        id={`${htmlInputId.username}`}\r\n                        sx={styles.input}\r\n                        error={!!usernameError}\r\n                        type='name'\r\n                        {...register('username')}\r\n                    />\r\n                    <InputLabel\r\n                        sx={styles.label}\r\n                        error={!!emailError}\r\n                        htmlFor={`${htmlInputId.email}`}\r\n                    >\r\n                        {emailLabel}\r\n                    </InputLabel>\r\n                    <OutlinedInput\r\n                        id={`${htmlInputId.email}`}\r\n                        sx={styles.input}\r\n                        error={!!emailError}\r\n                        type='email'\r\n                        {...register('email')}\r\n                    />\r\n                    <InputLabel\r\n                        sx={styles.label}\r\n                        error={!!passwordError}\r\n                        htmlFor={`${htmlInputId.password}`}>\r\n                        {passwordLabel}\r\n                    </InputLabel>\r\n                    <OutlinedInput\r\n                        id={`${htmlInputId.password}`}\r\n                        sx={styles.input}\r\n                        error={!!passwordError}\r\n                        type={showPassword ? 'text' : 'password'}\r\n                        {...register('password')}\r\n                        endAdornment={\r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                    aria-label=\"toggle password visibility\"\r\n                                    onClick={handleClickShowPassword}\r\n                                    onMouseDown={handleMouseDownPassword}\r\n                                    edge=\"end\"\r\n                                    sx={{mr: '-4px'}}\r\n                                >\r\n                                    {showPassword ? <VisibilityOff/> : <Visibility/>}\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        }\r\n                    />\r\n                    <InputLabel\r\n                        sx={styles.label}\r\n                        error={!!repeatPasswordError}\r\n                        htmlFor={`${htmlInputId.repeatPassword}`}\r\n                    >\r\n                        {repeatPasswordLabel}\r\n                    </InputLabel>\r\n                    <OutlinedInput\r\n                        id={`${htmlInputId.repeatPassword}`}\r\n                        sx={styles.input}\r\n                        error={!!repeatPasswordError}\r\n                        type='password'\r\n                        {...register(\"repeatPassword\")}\r\n                    />\r\n                    <Button\r\n                        type='submit'\r\n                        variant='contained'\r\n                        onClick={onSubmit}\r\n                        disabled={isNotValidated}\r\n                    >\r\n                        {submitButtonText}\r\n                    </Button>\r\n                    <StyledHeaderNavLink style={styles.signInLink} to='/'>\r\n                        {t('hasUserAccount')}\r\n                    </StyledHeaderNavLink>\r\n                </FormGroup>\r\n            </Container>\r\n        </>\r\n    )\r\n}","import {Theme} from \"@mui/material\";\r\n\r\n\r\nconst registerStyles = (theme: Theme) => {\r\n\r\n\r\n    return {\r\n        container: {\r\n            py: 3,\r\n            bgcolor: 'background.default',\r\n            width: '100%',\r\n        },\r\n        title: {\r\n            textAlign: 'center',\r\n            fontWeight: 'bold',\r\n            [theme.breakpoints.down('tablet')]: {\r\n                fontSize: 50\r\n            }\r\n        },\r\n        form: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            maxWidth: '500px',\r\n            mx: 'auto',\r\n            padding: 3,\r\n            mt: 2,\r\n            borderRadius: 1,\r\n            [theme.breakpoints.down('mobile')]: {\r\n                padding: 1,\r\n            }\r\n        },\r\n        label: {whiteSpace: 'unset'},\r\n        input: {mt: 1, mb: 2},\r\n        signInLink: {marginLeft: 'auto', marginRight: 'auto', marginTop: '16px', textDecoration: 'underline'}\r\n    }\r\n}\r\n\r\nexport default registerStyles","import Register from './Register'\r\nexport default Register","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getFormGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiFormGroup', slot);\n}\nconst formGroupClasses = generateUtilityClasses('MuiFormGroup', ['root', 'row', 'error']);\nexport default formGroupClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"row\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getFormGroupUtilityClass } from './formGroupClasses';\nimport useFormControl from '../FormControl/useFormControl';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    row,\n    error\n  } = ownerState;\n  const slots = {\n    root: ['root', row && 'row', error && 'error']\n  };\n  return composeClasses(slots, getFormGroupUtilityClass, classes);\n};\nconst FormGroupRoot = styled('div', {\n  name: 'MuiFormGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.row && styles.row];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'column',\n  flexWrap: 'wrap'\n}, ownerState.row && {\n  flexDirection: 'row'\n}));\n\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\nconst FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormGroup'\n  });\n  const {\n      className,\n      row = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = _extends({}, props, {\n    row,\n    error: fcs.error\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormGroupRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Display group of elements in a compact row.\n   * @default false\n   */\n  row: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default FormGroup;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _span;\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      disablePointerEvents = false,\n      disableTypography = false,\n      position,\n      variant: variantProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ? /* notranslate needed while Google Translate will not fix zero-width space issue */_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        })) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;"],"names":["htmlInputId","theme","container","py","bgcolor","width","title","textAlign","fontWeight","breakpoints","down","fontSize","form","display","flexDirection","maxWidth","mx","padding","mt","borderRadius","label","whiteSpace","input","mb","signInLink","marginLeft","marginRight","marginTop","textDecoration","useForm","resolver","yupResolver","registerValidationSchema","mode","register","handleSubmit","setValue","errors","formState","usernameError","username","emailError","email","passwordError","password","repeatPasswordError","repeatPassword","dispatch","useAppDispatch","onSubmit","registerUser","isNotValidated","useState","showPassword","setShowPassword","styles","useSx","registerStyles","t","useShortTranslation","componentNameKey","emailLabel","message","usernameLabel","passwordLabel","repeatPasswordLabel","submitButtonText","StandardHelmet","keyOfTitle","Container","sx","Typography","variant","FormGroup","InputLabel","error","htmlFor","OutlinedInput","id","type","endAdornment","InputAdornment","position","IconButton","onClick","show","onMouseDown","event","preventDefault","edge","mr","VisibilityOff","Visibility","Button","disabled","style","to","createSvgIcon","_jsx","d","getFormGroupUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","FormGroupRoot","styled","name","overridesResolver","props","ownerState","root","row","_extends","flexWrap","React","inProps","ref","useThemeProps","className","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","fcs","formControlState","states","classes","slots","composeClasses","useUtilityClasses","clsx","getInputAdornmentUtilityClass","_span","InputAdornmentRoot","capitalize","disablePointerEvents","height","maxHeight","alignItems","color","vars","palette","action","active","inputAdornmentClasses","pointerEvents","children","component","disableTypography","variantProp","hiddenLabel","size","FormControlContext","value","as","_jsxs"],"sourceRoot":""}