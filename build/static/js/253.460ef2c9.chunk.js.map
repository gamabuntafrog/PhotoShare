{"version":3,"file":"static/js/253.460ef2c9.chunk.js","mappings":"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","sources":["components/Collection/CollectionComponents/CollectionSettings/CollectionSettingsComponents/CollectionInfo/index.ts","components/Collection/CollectionComponents/CollectionSettings/CollectionSettingsComponents/CollectionInfo/CollectionInfo.tsx","../node_modules/@mui/material/esm/FormGroup/formGroupClasses.js","../node_modules/@mui/material/esm/FormGroup/FormGroup.js"],"sourcesContent":["import CollectionInfo from './CollectionInfo';\r\n\r\nexport default CollectionInfo","import {\r\n    Box,\r\n    Button,\r\n    FormGroup,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    TextField,\r\n    Typography,\r\n    useTheme\r\n} from \"@mui/material\";\r\nimport React, {useState} from \"react\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {yupResolver} from \"@hookform/resolvers/yup/dist/yup\";\r\nimport {collectionValidationSchema} from \"../../../../../../utils/validationSchemas\";\r\nimport useSx from \"../../../../../../hooks/useSx\";\r\nimport collectionStyles from \"../../../../collectionStyles\";\r\nimport useShortTranslation from \"../../../../../../hooks/useShortTranslation\";\r\nimport extendedCollectionsApi from \"../../../../../../redux/api/extendedCollectionsApi\";\r\n\r\ninterface ICollectionInfoProps {\r\n    title: string,\r\n    tags: string,\r\n    isAdmin: boolean,\r\n    collectionId: string\r\n}\r\n\r\ninterface ICollectionFormData {\r\n    title: string,\r\n    tags: string,\r\n}\r\n\r\nexport default function CollectionInfo({title, tags, isAdmin, collectionId}: ICollectionInfoProps) {\r\n\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    const [updateInfo] = extendedCollectionsApi.useChangeCollectionInfoMutation()\r\n\r\n    const {\r\n        register,\r\n        reset: resetForm,\r\n        handleSubmit,\r\n        formState: {errors: {title: titleError, tags: tagsError}}\r\n    } = useForm<ICollectionFormData>({\r\n        resolver: yupResolver(collectionValidationSchema),\r\n        mode: 'all',\r\n        defaultValues: {\r\n            title: title,\r\n            tags: tags\r\n        }\r\n    });\r\n\r\n    const handleClose = () => {\r\n        setIsEditing(false)\r\n        resetForm()\r\n    }\r\n    const handleOpen = () => setIsEditing(true)\r\n\r\n    const isErrors = !!(titleError || tagsError)\r\n\r\n    const onSubmit = handleSubmit(async ({title, tags}) => {\r\n        const formattedTags = tags.split(' ')\r\n\r\n        await updateInfo({title, tags: formattedTags, collectionId})\r\n\r\n        handleClose()\r\n    })\r\n\r\n\r\n    const {collectionSettingsInfo: styles} = useSx(collectionStyles)\r\n    const {changeInfoForm: formStyles} = styles\r\n\r\n    const t = useShortTranslation({componentNameKey: \"Collection.CollectionSettings.CollectionInfo\"})\r\n    const tForm = useShortTranslation({componentNameKey: \"Collection.CollectionSettings.CollectionInfo.form\"})\r\n\r\n    const titleLabel = titleError?.message ? tForm(titleError.message) : tForm('titleLabel')\r\n    const tagsLabel = tagsError?.message ? tForm(tagsError.message) : tForm('tagsLabel')\r\n\r\n    if (isAdmin && isEditing) {\r\n        return (\r\n            <FormGroup\r\n                sx={formStyles.wrapper}\r\n                onSubmit={onSubmit}\r\n            >\r\n                <InputLabel error={!!titleError} sx={formStyles.inputLabel} htmlFor='title'>{titleLabel}</InputLabel>\r\n                <OutlinedInput error={!!titleError} id='title' {...register('title')} sx={formStyles.input} fullWidth/>\r\n\r\n                <InputLabel sx={formStyles.inputLabel} htmlFor='tags'>{tagsLabel}</InputLabel>\r\n                <TextField error={!!tagsError} id='tags' {...register('tags')} sx={formStyles.input} multiline minRows={2} fullWidth />\r\n\r\n                <Box sx={formStyles.buttonsWrapper}>\r\n                    <Button disabled={isErrors} sx={formStyles.saveChangesButton}  variant='contained' type='submit' onClick={onSubmit} fullWidth >\r\n                        {tForm('saveChangesButton')}\r\n                    </Button>\r\n                    <Button sx={formStyles.cancelChangesButton} color='error' variant='text' onClick={handleClose} >\r\n                        {tForm('cancelChangesButton')}\r\n                    </Button>\r\n                </Box>\r\n            </FormGroup>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Box sx={styles.wrapper}>\r\n            <Box sx={styles.secondWrapper}>\r\n                <Typography variant='h6' textAlign='center'>{title}</Typography>\r\n                <Typography color='text.secondary'>{tags}</Typography>\r\n            </Box>\r\n            {isAdmin && (\r\n                <Button onClick={handleOpen} variant='contained'>\r\n                    {t('editButton')}\r\n                </Button>\r\n            )}\r\n        </Box>\r\n    )\r\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getFormGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiFormGroup', slot);\n}\nconst formGroupClasses = generateUtilityClasses('MuiFormGroup', ['root', 'row', 'error']);\nexport default formGroupClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"row\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getFormGroupUtilityClass } from './formGroupClasses';\nimport useFormControl from '../FormControl/useFormControl';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    row,\n    error\n  } = ownerState;\n  const slots = {\n    root: ['root', row && 'row', error && 'error']\n  };\n  return composeClasses(slots, getFormGroupUtilityClass, classes);\n};\nconst FormGroupRoot = styled('div', {\n  name: 'MuiFormGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.row && styles.row];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'column',\n  flexWrap: 'wrap'\n}, ownerState.row && {\n  flexDirection: 'row'\n}));\n\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\nconst FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormGroup'\n  });\n  const {\n      className,\n      row = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = _extends({}, props, {\n    row,\n    error: fcs.error\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormGroupRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Display group of elements in a compact row.\n   * @default false\n   */\n  row: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default FormGroup;"],"names":["title","tags","isAdmin","collectionId","useState","isEditing","setIsEditing","extendedCollectionsApi","updateInfo","useForm","resolver","yupResolver","collectionValidationSchema","mode","defaultValues","register","resetForm","reset","handleSubmit","formState","errors","titleError","tagsError","handleClose","isErrors","onSubmit","formattedTags","split","styles","useSx","collectionStyles","collectionSettingsInfo","formStyles","changeInfoForm","t","useShortTranslation","componentNameKey","tForm","titleLabel","message","tagsLabel","FormGroup","sx","wrapper","InputLabel","error","inputLabel","htmlFor","OutlinedInput","id","input","fullWidth","TextField","multiline","minRows","Box","buttonsWrapper","Button","disabled","saveChangesButton","variant","type","onClick","cancelChangesButton","color","secondWrapper","Typography","textAlign","getFormGroupUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","FormGroupRoot","styled","name","overridesResolver","props","ownerState","root","row","_extends","display","flexDirection","flexWrap","React","inProps","ref","useThemeProps","className","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","fcs","formControlState","states","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx"],"sourceRoot":""}